import io

import aiohttp
import gradio as gr
from PIL import Image

from app.settings.settings import FASTAPI_HOST, FASTAPI_PORT


def image_to_bytes(image: Image.Image, format_: str = 'PNG') -> bytes:
    """Преобразует изображение PIL в байтовый формат."""
    with io.BytesIO() as output:
        image.save(output, format=format_)
        return output.getvalue()


async def gradio_interface(image, model_name='blip', length=20):
    url = f'http://{FASTAPI_HOST}:{FASTAPI_PORT}/upload-image/'
    async with aiohttp.ClientSession(trust_env=True) as session:
        response = await session.post(
            url=url,
            data={'file': image_to_bytes(image)},
            params={"model_name": model_name, "length": int(length)},
        )
        resp = await response.json()
        return resp.get('description')


iface = gr.Interface(
    fn=gradio_interface,
    inputs=[
        gr.Image(type="pil"),
        gr.Dropdown(choices=['blip']),
        gr.Slider(minimum=1),
    ],
    outputs="text",
    title="Image Captioning",
    description="Upload an image and get a caption generated by a model."
)

iface.launch()
